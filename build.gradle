plugins {
	id 'org.springframework.boot' version '2.6.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'maven-publish'
}

group = 'com.example.prueba.prueba2'
version = '0.0.3-snapshot'
sourceCompatibility = '1.8'

publishing {
	publications {
		//Aqui estará el link del repo donde querramos subir el paquete, el link está
		//en gradle.properties
		//The repo link will be placed here, the link is gradle.properties
		//publishing("github.com/facephi/central-packages")
		publish(MavenPublication) {
			artifact file("$buildDir/libs/hello-${version}.jar")
		}
	}

	repositories {
		maven {

			setUrl(mavenRepository)


			/*
			tus credenciales de github con su respectivo token, se modifica
			en gradle.properties
			your github username and your token, you have to modify
			gradle.properties
			*/
			credentials {
				username = gituser
				password = gitpassword
			}
		}
	}
}

dependencies {

	//               groupid:artifactid:version
	implementation 'com.example.prueba:hello:0.0.3-snapshot'
	implementation 'com.example.prueba.prueba2:hello:0.0.3-snapshot'



	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'



}

test {
	useJUnitPlatform()
}

allprojects {
	repositories {
		// Use Maven Central for resolving dependencies.
		mavenCentral()
		google()

		//GitHub Packages
		maven {

			//Repo Link
			setUrl(mavenRepository)

			//Repo with packages
			artifactUrls mavenPackageRepository

			/*
			tus credenciales de github con su respectivo token, se modifica
			en gradle.properties
			your github username and your token, you have to modify
			gradle.properties
			*/
			credentials {
				username = gituser
				password = gitpassword
			}
		}
	}
}
